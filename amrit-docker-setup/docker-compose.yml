services:
  # NGINX Reverse Proxy
  nginx:
    build:
      context: .
      dockerfile: Dockerfile.nginx
    container_name: amrit-nginx
    restart: unless-stopped
    ports:
      - "80:80"
    networks:
      - amrit-network
      - app-network
    depends_on:
      - identity-api
      - admin-api
      - hwc-api
      - inventory-api
      - tm-api
      - mmu-api
      - scheduler-api
      - ecd-api
      - common-api
      - fhir-api
      - flw-api
      - helpline104-api
      - helpline1097-api
      - beneficiaryid-generation-api
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:80/health",
        ]
      interval: 30s
      timeout: 10s
      retries: 3

  # API Services
  identity-api:
    build:
      context: ./API/Identity-API
      dockerfile: Dockerfile
    container_name: identity-api-container
    restart: unless-stopped
    ports:
      - "8094:8080"
    networks:
      - amrit-network
      - app-network
    volumes:
      - ./logs/identity-api:/usr/local/tomcat/logs
    env_file:
      - ./.env
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:8080/v3/api-docs",
        ]
      interval: 30s
      timeout: 10s
      retries: 3

  admin-api:
    build:
      context: ./API/Admin-API
      dockerfile: Dockerfile
    container_name: admin-api-container
    restart: unless-stopped
    ports:
      - "8082:8080"
    networks:
      - amrit-network
      - app-network
    volumes:
      - ./logs/admin-api:/usr/local/tomcat/logs
    env_file:
      - ./.env
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:8080/v3/api-docs",
        ]
      interval: 30s
      timeout: 10s
      retries: 3

  common-api:
    build:
      context: ./API/Common-API
      dockerfile: Dockerfile
    container_name: common-api-container
    restart: unless-stopped
    ports:
      - "8083:8080"
    networks:
      - amrit-network
      - app-network
    volumes:
      - ./logs/common-api:/usr/local/tomcat/logs
    env_file:
      - ./.env
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:8080/v3/api-docs",
        ]
      interval: 30s
      timeout: 10s
      retries: 3

  ecd-api:
    build:
      context: ./API/ECD-API
      dockerfile: Dockerfile
    container_name: ecd-api-container
    restart: unless-stopped
    ports:
      - "8084:8080"
    networks:
      - amrit-network
      - app-network
    volumes:
      - ./logs/ecd-api:/usr/local/tomcat/logs
    env_file:
      - ./.env
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:8080/v3/api-docs",
        ]
      interval: 30s
      timeout: 10s
      retries: 3

  hwc-api:
    build:
      context: ./API/HWC-API
      dockerfile: Dockerfile
    container_name: hwc-api-container
    restart: unless-stopped
    ports:
      - "8085:8080"
    networks:
      - amrit-network
      - app-network
    volumes:
      - ./logs/hwc-api:/usr/local/tomcat/logs
    env_file:
      - ./.env
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:8080/v3/api-docs",
        ]
      interval: 30s
      timeout: 10s
      retries: 3

  inventory-api:
    build:
      context: ./API/Inventory-API
      dockerfile: Dockerfile
    container_name: inventory-api-container
    restart: unless-stopped
    ports:
      - "8086:8080"
    networks:
      - amrit-network
      - app-network
    volumes:
      - ./logs/inventory-api:/usr/local/tomcat/logs
    env_file:
      - ./.env
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:8080/v3/api-docs",
        ]
      interval: 30s
      timeout: 10s
      retries: 3

  tm-api:
    build:
      context: ./API/TM-API
      dockerfile: Dockerfile
    container_name: tm-api-container
    restart: unless-stopped
    ports:
      - "8089:8080"
    networks:
      - amrit-network
      - app-network
    volumes:
      - ./logs/tm-api:/usr/local/tomcat/logs
    env_file:
      - ./.env
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:8080/v3/api-docs",
        ]
      interval: 30s
      timeout: 10s
      retries: 3

  mmu-api:
    build:
      context: ./API/MMU-API
      dockerfile: Dockerfile
    container_name: mmu-api-container
    restart: unless-stopped
    ports:
      - "8087:8080"
    networks:
      - amrit-network
      - app-network
    volumes:
      - ./logs/mmu-api:/usr/local/tomcat/logs
    env_file:
      - ./.env
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:8080/v3/api-docs",
        ]
      interval: 30s
      timeout: 10s
      retries: 3

  scheduler-api:
    build:
      context: ./API/Scheduler-API
      dockerfile: Dockerfile
    container_name: scheduler-api-container
    restart: unless-stopped
    ports:
      - "8088:8080"
    networks:
      - amrit-network
      - app-network
    volumes:
      - ./logs/scheduler-api:/usr/local/tomcat/logs
    env_file:
      - ./.env
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:8080/v3/api-docs",
        ]
      interval: 30s
      timeout: 10s
      retries: 3

  fhir-api:
    build:
      context: ./API/FHIR-API
      dockerfile: Dockerfile
    container_name: fhir-api-container
    restart: unless-stopped
    ports:
      - "8093:8080"
    networks:
      - amrit-network
      - app-network
    volumes:
      - ./logs/fhir-api:/usr/local/tomcat/logs
    env_file:
      - ./.env
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:8080/v3/api-docs",
        ]
      interval: 30s
      timeout: 10s
      retries: 3

  flw-api:
    build:
      context: ./API/FLW-API
      dockerfile: Dockerfile
    container_name: flw-api-container
    restart: unless-stopped
    ports:
      - "8081:8080"
    networks:
      - amrit-network
      - app-network
    volumes:
      - ./logs/flw-api:/usr/local/tomcat/logs
    env_file:
      - ./.env
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:8080/v3/api-docs",
        ]
      interval: 30s
      timeout: 10s
      retries: 3

  helpline104-api:
    build:
      context: ./API/Helpline104-API
      dockerfile: Dockerfile
    container_name: helpline104-api-container
    restart: unless-stopped
    ports:
      - "8091:8080"
    networks:
      - amrit-network
      - app-network
    volumes:
      - ./logs/helpline104-api:/usr/local/tomcat/logs
    env_file:
      - ./.env
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:8080/v3/api-docs",
        ]
      interval: 30s
      timeout: 10s
      retries: 3

  helpline1097-api:
    build:
      context: ./API/Helpline1097-API
      dockerfile: Dockerfile
    container_name: helpline1097-api-container
    restart: unless-stopped
    ports:
      - "8090:8080"
    networks:
      - amrit-network
      - app-network
    volumes:
      - ./logs/helpline1097-api:/usr/local/tomcat/logs
    env_file:
      - ./.env
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:8080/v3/api-docs",
        ]
      interval: 30s
      timeout: 10s
      retries: 3

  beneficiaryid-generation-api:
    build:
      context: ./API/BeneficiaryID-Generation-API
      dockerfile: Dockerfile
    container_name: beneficiaryid-generation-api-container
    restart: unless-stopped
    ports:
      - "8092:8080"
    networks:
      - amrit-network
      - app-network
    volumes:
      - ./logs/beneficiaryid-generation-api:/usr/local/tomcat/logs
    env_file:
      - ./.env
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:8080/v3/api-docs",
        ]
      interval: 30s
      timeout: 10s
      retries: 3

# Amrit network
networks:
  amrit-network:
    driver: bridge
  app-network:
    name: app-network
    driver: bridge
    external: false
